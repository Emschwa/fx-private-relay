# Generated by Django 4.2.13 on 2024-06-05 19:23

from django.db import migrations


def add_view_forward_func(apps, schema_editor):
    if schema_editor.connection.vendor.startswith("postgres"):
        # Postgres views can be used in UPDATE, INSERT, DELETE statements
        schema_editor.execute(
            'CREATE VIEW "emails_profile" AS SELECT * FROM "privaterelay_profile";'
        )
        schema_editor.execute(
            'CREATE VIEW "emails_abusemetrics" AS'
            ' SELECT * FROM "privaterelay_abusemetrics";'
        )
    elif schema_editor.connection.vendor.startswith("sqlite"):
        # SQLite views can not. Just create look-alike DBs for migrations tests
        schema_editor.execute(
            'CREATE TABLE "emails_profile" AS SELECT * FROM "privaterelay_profile";'
        )
        schema_editor.execute(
            'CREATE TABLE "emails_abusemetrics" AS'
            ' SELECT * FROM "privaterelay_abusemetrics";'
        )
    else:
        raise Exception(f"Unknown vendor {schema_editor.connection.vendor=}")


def rm_view_reverse_func(apps, schema_editor):
    if schema_editor.connection.vendor.startswith("postgres"):
        schema_editor.execute('DROP VIEW IF EXISTS "emails_profile";')
        schema_editor.execute('DROP VIEW IF EXISTS "emails_abusemetrics";')
    elif schema_editor.connection.vendor.startswith("sqlite"):
        schema_editor.execute('DROP TABLE IF EXISTS "emails_profile";')
        schema_editor.execute('DROP TABLE IF EXISTS "emails_abusemetrics";')
    else:
        raise Exception(f"Unknown vendor {schema_editor.connection.vendor=}")


class Migration(migrations.Migration):

    dependencies = [
        ("privaterelay", "0010_move_profile_and_abusemetrics"),
    ]

    operations = [
        migrations.AlterModelTable(
            name="abusemetrics",
            table=None,
        ),
        migrations.AlterModelTable(
            name="profile",
            table=None,
        ),
        migrations.RunPython(
            code=add_view_forward_func,
            reverse_code=rm_view_reverse_func,
            elidable=True,
        ),
    ]
